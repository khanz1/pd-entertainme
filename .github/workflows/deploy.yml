name: CI/CD ‚Üí AWS EC2

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-24.04

    steps:
      # 1) Checkout your code
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Copy deployment files to EC2
      - name: Copy deployment files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "docker-compose.prod.yml,scripts/prod.sh,server/**"
          target: "~/app/"

      # 3) SSH into EC2 and deploy using existing prod.sh script
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Create necessary directories
            mkdir -p ~/app/server

            # Create production environment file
            cat << 'EOF' > ~/app/server/.env.production
            ${{ secrets.PROD_ENV_FILE }}
            EOF

            # Make prod.sh executable
            chmod +x ~/app/scripts/prod.sh

            # Change to app directory and run production script
            cd ~/app
            echo "üöÄ Running production deployment script..."
            ./scripts/prod.sh

            # Wait a bit for services to stabilize
            echo "‚è≥ Waiting for services to stabilize..."
            sleep 15

            # Perform additional health checks
            echo "üîç Performing health checks..."

            # Check Redis health
            if docker exec pd-entertainme-redis-prod redis-cli ping > /dev/null 2>&1; then
              echo "‚úÖ Redis is healthy"
            else
              echo "‚ö†Ô∏è Redis health check failed"
              docker logs pd-entertainme-redis-prod --tail 10
            fi

            # Check application health (using port 8022 from docker-compose.prod.yml)
            if curl -f http://localhost:8022/api > /dev/null 2>&1; then
              echo "‚úÖ Application is healthy and running on port 8022"
              echo "üåê API Documentation: http://localhost:8022/docs"
            else
              echo "‚ö†Ô∏è Application health check failed, checking logs..."
              docker logs pd-entertainme-server-prod --tail 20
            fi

            echo ""
            echo "üéâ Deployment completed successfully!"
            echo "üìä Final Status:"
            docker-compose -f docker-compose.prod.yml ps
